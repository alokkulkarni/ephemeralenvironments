name: Destroy Environment

on:
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'GitHub issue number for the environment'
        required: true
        type: string

jobs:
  destroy:
    name: Destroy Environment
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    env:
      TF_IN_AUTOMATION: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Get Environment Details
        id: env
        uses: actions/github-script@v7
        with:
          # github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ inputs.issue_number }},
            });

            const metadata = JSON.parse(
              issue.data.body.match(/```json\n([\s\S]*?)\n```/)?.[1] || '{}'
            );

            // Update issue status
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ inputs.issue_number }},
              labels: ['environment', 'status:destroying'],
            });

            // Add comment about destruction starting
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ inputs.issue_number }},
              body: '## Environment Destruction Started\n\nDestroying environment resources...',
            });

            return {
              env_dir: metadata.terraform.tfvars_location.split('/')[0],
              tfvars_path: metadata.terraform.tfvars_location,
              state_location: metadata.terraform.state_location,
            };

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        working-directory: aws
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=${{ steps.env.outputs.state_location }}" \
            -backend-config="region=${{ secrets.AWS_REGION }}" \
            | tee "../${{ steps.env.outputs.env_dir }}/destroy-init.log"

      - name: Terraform Destroy
        working-directory: aws
        run: |
          terraform destroy \
            -auto-approve \
            -var-file="../${{ steps.env.outputs.tfvars_path }}" \
            | tee "../${{ steps.env.outputs.env_dir }}/destroy.log"

      - name: Update Environment Status
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Update issue status
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ inputs.issue_number }},
              labels: ['environment', 'status:destroyed'],
              state: 'closed',
            });

            // Add comment about destruction completion
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ inputs.issue_number }},
              body: '## Environment Destroyed Successfully\n\nThe environment has been successfully destroyed and all resources have been cleaned up.',
            });

      - name: Upload Destruction Logs
        uses: actions/upload-artifact@v4
        with:
          name: destroy-logs-${{ inputs.issue_number }}
          path: ${{ steps.env.outputs.env_dir }}

      - name: Commit Environment Removal
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Remove environment ${{ steps.env.outputs.env_dir }}"
          file_pattern: ${{ steps.env.outputs.env_dir }}
          branch: main 